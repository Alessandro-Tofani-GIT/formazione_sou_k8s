---
- name: Installa Docker e configura rete
  become: yes
  hosts: rocky
  tasks:
    - name: set up docker
      ansible.builtin.shell: |
        dnf install -y yum-utils
        yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
            

    - name: installa docker
      package:
        name:
          - docker-ce
        state: present
    
    - name: install pip
      become: yes
      package:
        name: python3-pip
        update_cache: yes
        state: present
 

    - name: Installa le librerie Python necessarie per usare il modulo community.docker
      ansible.builtin.pip:
        name:
          - docker
          - requests
        executable: pip3

   
   
    - name: Start Docker and enable
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes
    
          
- name: Step 2 - Configurazione rete e container Docker
  hosts: all
  become: yes

  tasks:
    - name: Crea rete Docker bridge 
      community.docker.docker_network:
        name: my_network
        driver: bridge
        ipam_config:
          - subnet: "192.168.100.0/24"
            gateway: "192.168.100.1"

    - name: Volume data for jenkins
      community.docker.docker_volume:
        volume_name: jenkins_volume
        state: present


    - name: avvio container jenkins
      community.docker.docker_container:
        name: jenkins
        image: docker.io/jenkins/jenkins:latest
        state: started
        volumes:
          - jenkins_volume:/var/jenkins_home
        ports:
          - "50000:50000"
          - "8080:8080"
        networks:
          - name: my_network
        
    
    
    - name: avvio container agent jankins
      community.docker.docker_container:
        name: jenkins-agent
        image: alessandrotofani/docker_hub_alessandro:0.0.3
        state: started
        restart_policy: unless-stopped
        volumes:
          - jenkins_volume:/var/jenkins_home
          - /var/run/docker.sock:/var/run/docker.sock
        networks:
          - name: my_network
            ipv4_address: 192.168.100.9
        env:
          JENKINS_URL: "http://192.168.3.22:8080"
          #Insert JENKINS_AGENT_NAME generated by jenkins
          #In this case, "jenkins-agent-01" is used because is the name i chose for my agent
          JENKINS_AGENT_NAME: "jenkins-agent-01"
          #Insert JENKINS_SECRET generated by jenkins
          #For the secret, paste it from jenkins
          JENKINS_SECRET: "7d4478215af0ce0f5edc8904fc4f50e7921f580a4855e51d5c47b92f152d8c1b"
         
        

    - name: Install sudo
      community.docker.docker_container_exec:
        container: jenkins-agent
        command: apt-get update
        user: root
        tty: true    

    - name: Install sudo
      community.docker.docker_container_exec:
        container: jenkins-agent
        command: apt-get install -y sudo
        user: root
        tty: true

    - name: Aggiungi jenkins ai sudoers (NOPASSWD)
      community.docker.docker_container_exec:
        container: jenkins-agent
        command: /bin/bash -c "echo 'jenkins ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers"
        user: root
        tty: true


    

    
